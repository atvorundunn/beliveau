#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jan 22 10:17:22 2020

@author: tvorua
"""

import allel
import math
import pandas as pd

filename = '/Users/tvorua/Downloads/hg38.hybrid.vcf'


dat = allel.read_vcf(filename)


chromX = {'POS' : dat['variants/POS'][4120212:], 'REF' : dat['variants/REF'][4120212:],
          'ALT' : dat['variants/ALT'][4120212:], 'GT' : dat['calldata/GT'][4120212:], 
          'CHROM' : dat['variants/CHROM'][4120212:]}
#truncate data

chromXFrame = pd.DataFrame.from_dict(chromX)



dup = {}
seen = {}

for x in range(chromX['POS'].size):
    
    pos = chromX['POS'][x]
    
    if pos in seen.keys():
    
        dup[pos] = [chromX['REF'][x], chromX['CHROM'][x] , seen[pos][0], seen[pos][1]]
        #find duplicates
        
        if chromX['CHROM'][x] == seen[pos][1]:
            print(pos)
            print(chromX['CHROM'][x])
            print(seen[pos][1])
            
            #there are no duplicate positions on the same chromosome!!!
    
    else:
    
        seen[pos] = [chromX['REF'][x], chromX['CHROM'][x]]
        


#seperate Homozygous and hetrozygous

homo = {} 
hetero = {}
     
for x in range(chromX['POS'].size):
    
    gt = chromX['GT'][x][0]
    
    if gt[0] == gt[1]:
        
        homo[chromX['POS'][x]] = gt
        #segregate homozygous alleles

    else:
        hetero[chromX['POS'][x]] = gt
        #segregate heterozygous alleles
        
        
        
length = chromX['POS'].size - 1
        



#Find avg and standard deviation


distSum = 0
count = 0

for x in range(length):
    
    dist = chromX['POS'][x+1] - chromX['POS'][x]
    distSum = distSum + dist
    count = count + 1
        
    
avg = distSum/count

sdSum = 0

for x in range(length):
    val = dist = chromX['POS'][x+1] - chromX['POS'][x]
    sdInd = (val - avg)*(val - avg)
    sdSum = sdSum + sdInd
    
sd = math.sqrt(sdSum/length)





#Group loci by density


tight = []
loose = []

for x in range(length):
    
    dens = chromX['POS'][x + 1] - chromX['POS'][x]
    
    if dens <= avg / 2 and chromX['POS'][x] in hetero.keys():
        
        tight.append(chromX['POS'][x])
        
    if dens >= avg * 2 and chromX['POS'][x] in hetero.keys():
        
        loose.append(chromX['POS'][x])
        
#TODO: eliminate long references and alternates


""

# -*- coding: utf-8 -*-
"""
Created on Thu Apr  2 11:11:43 2020

@author: alisa
"""

filename = '/Users/alisa/Downloads/hg38_chrXb.bed/hg38_chrXb.bed'

# Get input file from user input.
#inputFile = sys.argv[1]
inputFile = '/Users/alisa/Downloads/hg38.hybrid.vcf'


# Read in file contents.
with open(inputFile, 'r') as f:
    file_read = [line.strip() for line in f]
    
    
# Create filtered list using conditional list comprehension.
filtered_list = [x for x in file_read if x.split('\t')[0][0:3]=="chr" \
and len(x.split('\t')[3])==1 and len(x.split('\t')[4])==1]


print('Program returned %d / %d lines after filtering' % \
(len(filtered_list), len(file_read)))


#Works well except that other scripts expect dictionary
